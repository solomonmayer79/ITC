-- 1. What is the total amount each customer spent at the restaurant?
	select s.customer_id as customer, sum(m.price) as price from sales s left join menu m on s.product_id = m.product_id group by s.customer_id; 

-- 2. How many days has each customer visited the restaurant?
	select customer_id, count(Distinct order_date) as total_days from sales group by customer_id;

-- 3. What was the first item from the menu purchased by each customer?
	WITH firstItem AS ( select sales.customer_id, menu.product_name, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY customer_id) row_a from 
sales inner join menu ON sales.product_id = menu.product_id) select * from firstItem where row_a = 1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
	select m.product_name, COUNT(s.product_id) AS most_purchased_item from sales s join menu m on s.product_id = m.product_id
group by m.product_name order by most_purchased_item desc LIMIT 1;	

-- 5. Which item was the most popular for each customer?	WITH most_popular AS ( SELECT sales.customer_id, menu.product_name, COUNT(menu.product_id) AS order_count, ROW_NUMBER() OVER (PARTITION BY sales.customer_id ORDER BY COUNT(sales.customer_id) DESC) AS row_a
  FROM menu JOIN sales ON menu.product_id = sales.product_id GROUP BY sales.customer_id, menu.product_name) SELECT customer_id, product_name, order_count FROM most_popular WHERE row_a = 1;	
-- 6. Which item was purchased first by the customer after they became a member?
	WITH first_item_purchased AS (
SELECT
    members.customer_id, 
    sales.product_id,
    sales.order_date,
    ROW_NUMBER() OVER(
      PARTITION BY members.customer_id
      ORDER BY sales.order_date) AS row_num
  FROM members
  JOIN sales
    ON members.customer_id = sales.customer_id
    AND sales.order_date >= members.join_date
    )
    SELECT 
  customer_id, 
  product_name 
FROM first_item_purchased
JOIN menu
  ON first_item_purchased.product_id = menu.product_id
WHERE row_num = 1
ORDER BY customer_id ASC;

-- 7. Which item was purchased just before the customer became a member?
	WITH first_item_purchased AS (
SELECT
    members.customer_id, 
    sales.product_id,
    sales.order_date,
    ROW_NUMBER() OVER(
      PARTITION BY members.customer_id
      ORDER BY sales.order_date desc) AS row_num
  FROM members
  JOIN sales
    ON members.customer_id = sales.customer_id
    AND sales.order_date < members.join_date
    )
    SELECT 
  customer_id, 
  product_name 
FROM first_item_purchased
JOIN menu
  ON first_item_purchased.product_id = menu.product_id
WHERE row_num = 1
ORDER BY customer_id ASC;

-- 8. What is the total items and amount spent for each member before they became a member?
	select s.customer_id as customer, COUNT(s.product_id) AS total_items, sum(m.price) as total_price from sales s 
	left join members ms on s.customer_id = ms.customer_id
    left join menu m on m.product_id = s.product_id
		where s.order_date < ms.join_date 
        group by s.customer_id;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
	WITH points_collect AS (
  SELECT 
    menu.product_id, 
    CASE
      WHEN product_id = 1 THEN price * 20
      ELSE price * 10
    END AS points
  FROM menu
)

SELECT 
  sales.customer_id, 
  SUM(points_collect.points) AS total_points
FROM sales
JOIN points_collect
  ON sales.product_id = points_collect.product_id
GROUP BY sales.customer_id
ORDER BY sales.customer_id;

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
  @@@ I am straggling in this question. Please help me. Thank you